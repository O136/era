The project was compiled and tested on a 4.15.0 x86_64 GNU/Linux Kernel

Tool dependencies:
  nasm version >= 2.13.02
  gcc version  >= 7.3.0
  make

Project Structure:
readme

root
        makefile

        headers
          polynom.h
          utils.h
        src
          main.c
          norm.asm
          utils.c
        test
          test.c
          polynom.txt

test.c      contains useful testcases to test the
            correctness of the norm function.

utils.h     contains helper functions to print out the polynomes.

norm.asm    contains the assembly implementation of the norm function defined
            in polynom.h.

polynom.txt is just a C implementation that can be used to understand the
            norm.asm better.

If the dependencies are fulfilled then we can proceed to compile
the project with the help of the make utility.

IMPORTANT:

For the following steps be sure that your current working directory
is the root directory of the project.

COMPILATION:

There are 3 possible make targets : all, test, clean.
They can be invoked with the commands from the console:

1.make all

Will result in a main.out binary as an output which can then be run
as ./main.out

Its purpose is to give to take input from user and compute the
normalized polynomials.

2.make test

Will result in a test.out binary as an output in the test directory which
again can be run as test/test.out

The test.out will run all test cases and is independent of the main.out
program.

3.make clean

It will remove all the object files and binaries which were
created during the make all and make test phases.

